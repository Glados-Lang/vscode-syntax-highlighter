{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Xenon",
	"patterns": [
		{"include": "#comments"},
		{"include": "#strings"},
		{"include": "#numbers"},
		{"include": "#keywords"},
		{"include": "#types"},
		{"include": "#functions"},
		{"include": "#operators"},
		{"include": "#literals"},
		{"include": "#variables"}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name":"comment.line.double-slash.xenon",
					"begin": "//",
					"beginCaptures": {
						"0": { "name": "punctuation.definition.comment.xenon" }
					},
					"end": "\n"
				},
				{
					"name": "comment.block.gladoslang",
					"begin": "/\\*",
					"beginCaptures": {
					  "0": { "name": "punctuation.definition.comment.begin.gladoslang" }
					},
					"end": "\\*/",
					"endCaptures": {
					  "0": { "name": "punctuation.definition.comment.end.gladoslang" }
					}
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.xenon",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.xenon",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.decimal.xenon",
					"match": "\\b[0-9]+[.]?[0-9]*\\b"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.xenon",
					"match": "\\b(let|fn|while|if|elif|else|return|type)\\b"
				}
			]
		},
		"types": {
			"patterns": [
				{
					"name": "storage.type.xenon",
					"begin": "(->\\s*)?",
					"match": ":?\\s*(\\*?\\s*(mut\\s+)?)*\\b(i8|i16|i32|i64|u8|u16|u32|u64|f32|f64|bool|char|void|[A-Z][a-zA-Z0-9_]*)\\b",
					"end": ".*"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"name": "entity.name.function.call.xenon",
					"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\("
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.xenon",
					"match": "@|&"
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "variable.other.gladoslang",
					"match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b",
					"captures": {
						"0": { "name": "variable.other.gladoslang" }
					}
				}
			]
		},
		"literals": {
			"patterns": [
				{
					"name": "constant.language.gladoslang",
					"match": "\\b(true|false)\\b"
				}
			]
		}
				
	},
	"scopeName": "source.xn"
}